:root {
    /* * defining the colors we are going to be using on the site */
    --primary-color: #2584ff;
    --secondary-color: #00d9ff;
    --accent-color: #ff3400;
    --header-color: #1b0760;
    --body-text-color: #918ca4;
    --border-color: #ccc;
    --border-radius: 30px;
}

*, *::after, *::before{
    box-sizing: border-box;
}

/* * Typography */
html {
    font-size: 62.5%;
}

body {
    font-family: 'Inter', Arial, Helvetica, sans-serif;
    color: var(--body-text-color);
    font-size: 2.4rem;
    /* * remember that this is 1.5 * the font size since we are not using a measurement unit */
    line-height: 1.5;
}

h1, h2, h3 {
    color: var(--header-color);
    margin-bottom: 1rem;
}

h1 {
    font-size: 7rem;
}

h2 {
    font-size: 4rem;
}

h3 {
    font-size: 3rem;
}

p {
    margin: 0;
}

/* * Desktop view */
@media screen and (mid-width:1024px) {
    body {
        font-size: 1.8rem;
    }

    h1 {
        font-size: 8rem;
    }
    
    h2 {
        font-size: 4rem;
    }
    
    h3 {
        font-size: 2.4rem;
    }  
}

/* * Links */
a {
    text-decoration: none;
}

.link-arrow {
    color: var(--accent-color);
    text-transform: uppercase;
    font-size: 2rem;
    font-weight: bold;
}

/* * to create the arrow we use the content property to add it after */
/* * if this didn't work we would have used a icon */
.link-arrow::after{
    content: '-->';
    margin-left: 5px;
    transition:margin-left ease-out 0.7s;
}

/* TODO when we hover over the link we want the arrow to move to the right */
/* * to target the arrow we need to put the after psuedo class after the :hover */
.link-arrow:hover::after {
    margin-left: 10px;
}

@media screen and (min-width:1024px) {
    .link-arrow {
        font-size: 1.5rem;
    }
}

/* TODO Build a badge component */
/* * Badges */
.badge {
    border-radius: 20px;
    font-size: 2rem;
    font-weight: 600;
    padding: .5rem 2rem;
    /* * This is going to stop the badge from wraping on to a new line */
    white-space: nowrap;
}

/* * using BEM naming convention to define the skin  */
.badge--primary{
    background: var(--primary-color);
    color: white;
}

.badge--secondary{
    background: var(--secondary-color);
    color: white;
}

.badge--small {
    font-size: 1.6rem;
}

@media screen and (min-width:1024px) {
    .badge{
        font-size: 1.5rem;
    }

    .badge--small {
        font-size: 1.2rem;
    }
}

/* TODO Build a list component */
/* * Lists */

.list {
    list-style: none;
    padding-left: 0;
    color: var(--header-color);
}

/* * using the BEM naming convetion the child class gets the __ because it is apart of another component  */
.list--inline .list__item{
    /* * remember that we can apply margin to inline-block not inline */
    display: inline-block;
    margin-right: 2rem;
}

.list--tick {
    /* * we have to add this padding to get the image to show  */
    padding-left: 3rem;
    list-style-image: url(../images/tick.svg);   
}

/* * to add space between the ticks and the items we have to nest right here because if we didn't it would apply this rule to every list__item class */
.list--tick .list__item {
    padding-left: 0.5rem;
    margin-bottom: 1rem;
}

@media screen and (min-width: 1024px) {
    .list--tick .list__item {
        padding-left: 0;
    } 
}

/* TODO Work on the Icons*/
/* * Icons */

/* * setting the width and height of the icon */
.icon {
    width: 40px;
    height: 40px;
}

/* * primary icon color */
.icon--primary {
    /* * the fill property only works on svg images this is how we change the color */
    fill: var(--primary-color); 
}

icon-container {
    background: #f3f9fa;
    width: 64px;
    height: 64px;
    border-radius: 100%;
    /* * we are aligning the svg in the center of the circle */
    display: inline-flex;
    justify-content: center;
    align-items: center;
}

/* TODO Build buttons*/
/* * Buttons */


.btn {
    border-radius: 40px;
    border: 0;
    cursor: pointer;
    font-size: 1.7rem;
    font-weight: 600;
    margin: 1rem 0;
    outline: none;
    padding: 2rem 3rem;
    text-transform: uppercase;
    text-align: center;
    white-space: nowrap;
}

.btn--primary {
    background: var(--primary-color);
    color: #fff; 
}

.btn--primary:hover {
    background: #3a8ffd;
}

.btn--secondary {
    background: var(--secondary-color);
    color: #fff;
}

.btn--secondary:hover{
    background: #00c8eb;
}

.btn--accent {
    background-color: var(--accent-color);
    color: #fff;
}

.btn--accent:hover {
    background: #ec3000;
}

.btn--outline {
    background-color: none;
    color: var(--header-color);
    border: 2px solid var(--header-color);
    transition: background ease-out 0.9s;
}

.btn--outline:hover {
    background: var(--header-color);
    color: #fff;
}

.btn--block{
    width: 100%;
    display: inline-block;
}

@media screen and (min-width: 1024px) {
    .btn {
        font-size: 1.5rem;
    }
}

/* TODO working on the inputs*/
/* * Inputs */

.input {
    padding:1.5rem 3.5rem;
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    outline: 0;
    color: var(--header-color);
    font-size: 2rem;
}

/* * psuedo selector for placeholders */
::placeholder {
    color:#cdcbd7 ;
}

.input--group {
    border: 1px solid var(--border-color);
    border-radius: var(--border-radius);
    display: flex;
}

/* * using nesting to target this specific input field */
.input--group .input {
    border: 0;
    /* * this is going to make the input field grow to take up all of the available space in the div  */
    flex-grow: 1;
    padding: 1.5rem 1rem;
}

.input--group .btn{
    margin: 4px;
}

@media screen and (min-width: 1024px){
    .input {
        font-size: 1.5rem;
    }
}

 /* TODO working on the Card*/
/* * card */

.card {
    border-radius: 7px;
    box-shadow: 0 0 20px 10px #f3f3f3;
    /* * the hidden property is applied because the background volor gets rid of the rounded corners */
    overflow: hidden;
}

.card__header, .card__body {
    padding: 2rem 3rem;
}

.card--primary .card__header{
    background: var(--primary-color);
    color: white;
}

.card--secondary .card__header{
    background: var(--secondary-color);
    color: white;
}